<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.webp</groupId>
    <artifactId>odev02</artifactId>
    <version>1.0-SNAPSHOT</version>


    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <version.java>11</version.java>
        <version.hibernate.core>5.4.27.Final</version.hibernate.core>
        <version.hibernate.validator>6.2.0.Final</version.hibernate.validator>
        <version.javax.el>3.0.0</version.javax.el>
        <version.h2>1.4.197</version.h2>
        <version.junit>5.7.0</version.junit>
		<jbossTarget>${basedir}/target/downloaded_Wildfly</jbossTarget>
        <jbossHome>${jbossTarget}/wildfly</jbossHome>
        <!--  Burayı güncelleyecek olursak ayrıca jboss/wildfly kullanan imajların Dockerfile'ı da güncellenmeli-->
        <version.wildfly>18.0.1.Final</version.wildfly>
    </properties>

    <dependencies>

		<!--
            JEE için
            <scope>provided</scope>
            oldukça önemlidir.
            Anlamı bu kütüphaneler derleme ve testte gerekli iken WAR/JAR dosyasında bulunmayacaktır.
            Neden? Çünkü JEE container'ları zaten bunları barındırmaktadır. Ancak, hangi containerı kullanacağınıza göre
            bu da değişmektedir. Biz Wildfly kullanacağız.
        -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>8.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${version.hibernate.core}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${version.hibernate.validator}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${version.h2}</version>
            <scope>provided</scope>
        </dependency>

        <!-- JEE yerine SE kullanıldığında Hibernate kullanmak için gereklidir -->
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>${version.javax.el}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>${version.javax.el}</version>
        </dependency>

        <!-- EclipseLink için -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa</artifactId>
            <version>2.7.5</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.197</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>

		<dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${version.junit}</version>
			<scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
			<version>2.2.0.Final</version>
			<scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
			<version>1.5.0.Final</version>
			<scope>test</scope>
        </dependency>

    </dependencies>

	<build>
        <plugins>
            <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>unpack</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>org.wildfly</groupId>
                                        <artifactId>wildfly-dist</artifactId>
                                        <version>${version.wildfly}</version>
                                        <type>zip</type>
                                        <overWrite>false</overWrite>
                                        <outputDirectory>${jbossTarget}</outputDirectory>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                    <executions>
                        <execution>
                            <id>Rename Wildfly folder</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <target>
                                    <move file="${jbossTarget}/wildfly-${version.wildfly}"
                                          tofile="${jbossTarget}/wildfly"
                                          failonerror="false"
                                    />
                                </target>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
        </plugins>
    </build>
</project>